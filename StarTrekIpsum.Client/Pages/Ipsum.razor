@page "/ipsum"
@inject HttpClient Http
<div class="row">
    <div class="col-12">
        <h1>Choose your captain and length</h1>
    </div>
</div>
<div class="row">
    <div class="col-4">
        <div class="form-group">
            <label class="col-form-label" for="captainSelect">Captain</label>
            <select class="form-control" @bind="Captain" id="captainSelect">
                @foreach (var captain in Enum.GetNames(typeof(StarTrekCaptain)))
                {
                    <option value="@captain">@captain</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label class="col-form-label" for="paragraphInput">Number of Paragraphs</label>
            <input class="form-control" type="number" min="0" @bind="ParagraphCount" id="paragraphInput" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-8">
        @if (Text is null)
        {
            <h2>Make a choice first...</h2>
        }
        else
        {
            <IpsumText Text="@Text"></IpsumText>
        }
    </div>
</div>

@code {

    private StarTrekCaptain _captain;
    private string[] Text;
    private int _paragraphCount;

    public int ParagraphCount
    {
        get { return _paragraphCount; }
        set { _paragraphCount = value; GetIpsum(); }
    }

    protected override void OnInitialized()
    {
        Captain = StarTrekCaptain.Picard;
        ParagraphCount = 5;
    }

    public StarTrekCaptain Captain
    {
        get
        {
            return _captain;
        }
        set
        {
            _captain = value;
            GetIpsum();
        }
    }

    private async Task GetIpsum()
    {
        Text = await Http.GetJsonAsync<string[]>($"ipsumgenerator?Captain={Captain}&Paragraphs={ParagraphCount}");
        StateHasChanged();
    }
}
